openapi: 3.0.3
info:
  title: 글로벌 쇼핑몰 상품 아웃소싱 오픈마켓 등록 시스템 API
  description: 타오바오, 아마존 등 해외 쇼핑몰에서 상품을 수집하여 국내 오픈마켓에 자동 등록하는 시스템
  version: 1.0.0
  contact:
    name: Auto E-commerce System
    email: support@auto-ecommerce.com

servers:
  - url: https://api.auto-ecommerce.com/v1
    description: Production server
  - url: https://staging-api.auto-ecommerce.com/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - bearerAuth: []

paths:
  # 인증 관련 API
  /auth/login:
    post:
      summary: 사용자 로그인
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: password123
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/register:
    post:
      summary: 사용자 회원가입
      tags: [Authentication]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, name]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                phone:
                  type: string
                  pattern: '^[0-9]{10,11}$'
                company:
                  type: string
                businessNumber:
                  type: string
                  pattern: '^[0-9]{10}$'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  # 상품 관리 API
  /products:
    get:
      summary: 상품 목록 조회
      tags: [Products]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ProductStatus'
        - name: platform
          in: query
          schema:
            $ref: '#/components/schemas/SourcePlatform'
        - name: search
          in: query
          description: 상품명으로 검색
          schema:
            type: string
      responses:
        '200':
          description: 상품 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
                      pagination:
                        $ref: '#/components/schemas/Pagination'

    post:
      summary: 새 상품 등록
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [sourceUrl, marginRate, targetMarkets]
              properties:
                sourceUrl:
                  type: string
                  format: uri
                  description: 해외 쇼핑몰 상품 URL
                  example: https://item.taobao.com/item.htm?id=123456789
                marginRate:
                  type: number
                  minimum: 0
                  maximum: 1000
                  description: 마진율 (%)
                  example: 30
                targetMarkets:
                  type: array
                  items:
                    $ref: '#/components/schemas/OpenMarketPlatform'
                  minItems: 1
                  example: ["ELEVENST", "GMARKET"]
                autoUpdate:
                  type: boolean
                  default: true
                  description: 자동 업데이트 여부
      responses:
        '201':
          description: 상품 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      product:
                        $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'

  /products/{productId}:
    get:
      summary: 상품 상세 조회
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 상품 상세 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      product:
                        $ref: '#/components/schemas/Product'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: 상품 정보 수정
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marginRate:
                  type: number
                  minimum: 0
                  maximum: 1000
                targetMarkets:
                  type: array
                  items:
                    $ref: '#/components/schemas/OpenMarketPlatform'
                autoUpdate:
                  type: boolean
                translatedTitle:
                  type: string
                  maxLength: 200
                translatedDescription:
                  type: string
                  maxLength: 5000
      responses:
        '200':
          description: 상품 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      summary: 상품 삭제
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 상품 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  # 상품 크롤링 API
  /products/crawl:
    post:
      summary: 상품 정보 크롤링
      tags: [Products, Crawling]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [url]
              properties:
                url:
                  type: string
                  format: uri
                  description: 크롤링할 상품 URL
      responses:
        '200':
          description: 크롤링 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      productData:
                        $ref: '#/components/schemas/CrawledProductData'

  # 주문 관리 API
  /orders:
    get:
      summary: 주문 목록 조회
      tags: [Orders]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: platform
          in: query
          schema:
            $ref: '#/components/schemas/OpenMarketPlatform'
      responses:
        '200':
          description: 주문 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
                      pagination:
                        $ref: '#/components/schemas/Pagination'

  /orders/{orderId}:
    get:
      summary: 주문 상세 조회
      tags: [Orders]
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 주문 상세 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      order:
                        $ref: '#/components/schemas/Order'

    patch:
      summary: 주문 상태 업데이트
      tags: [Orders]
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/OrderStatus'
                trackingNumber:
                  type: string
                  description: 배송 추적번호
                memo:
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: 주문 상태 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  # 통계 API
  /analytics/dashboard:
    get:
      summary: 대시보드 통계 조회
      tags: [Analytics]
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [today, week, month, year]
            default: month
      responses:
        '200':
          description: 대시보드 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/DashboardStats'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # 사용자 스키마
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        profile:
          $ref: '#/components/schemas/UserProfile'
        preferences:
          $ref: '#/components/schemas/UserPreferences'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserRole:
      type: string
      enum: [ADMIN, SELLER, VIEWER]

    UserStatus:
      type: string
      enum: [ACTIVE, INACTIVE, SUSPENDED]

    UserProfile:
      type: object
      properties:
        phone:
          type: string
        company:
          type: string
        businessNumber:
          type: string
        address:
          $ref: '#/components/schemas/Address'

    UserPreferences:
      type: object
      properties:
        defaultMarginRate:
          type: number
          minimum: 0
          maximum: 1000
        preferredOpenMarkets:
          type: array
          items:
            $ref: '#/components/schemas/OpenMarketPlatform'
        language:
          type: string
          enum: [ko, en, zh]

    # 상품 스키마
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        sourceInfo:
          $ref: '#/components/schemas/ProductSourceInfo'
        originalData:
          $ref: '#/components/schemas/ProductOriginalData'
        translatedData:
          $ref: '#/components/schemas/ProductTranslatedData'
        salesSettings:
          $ref: '#/components/schemas/ProductSalesSettings'
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/ProductRegistration'
        status:
          $ref: '#/components/schemas/ProductStatus'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductStatus:
      type: string
      enum: [DRAFT, PROCESSING, READY, REGISTERED, ERROR, ARCHIVED]

    SourcePlatform:
      type: string
      enum: [TAOBAO, AMAZON, ALIBABA]

    OpenMarketPlatform:
      type: string
      enum: [ELEVENST, GMARKET, AUCTION, COUPANG, NAVER]

    ProductSourceInfo:
      type: object
      properties:
        sourceUrl:
          type: string
          format: uri
        sourcePlatform:
          $ref: '#/components/schemas/SourcePlatform'
        sourceProductId:
          type: string
        lastCrawledAt:
          type: string
          format: date-time

    ProductOriginalData:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          $ref: '#/components/schemas/ProductPrice'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        category:
          type: string
        brand:
          type: string
        tags:
          type: array
          items:
            type: string

    ProductTranslatedData:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        translatedAt:
          type: string
          format: date-time
        translationEngine:
          type: string
          enum: [GOOGLE, PAPAGO, BAIDU]
        qualityScore:
          type: number
          minimum: 0
          maximum: 100

    ProductSalesSettings:
      type: object
      properties:
        marginRate:
          type: number
          minimum: 0
          maximum: 1000
        salePrice:
          type: number
          minimum: 0
        minPrice:
          type: number
          minimum: 0
        maxPrice:
          type: number
          minimum: 0
        targetMarkets:
          type: array
          items:
            $ref: '#/components/schemas/OpenMarketPlatform'
        autoUpdate:
          type: boolean

    ProductRegistration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        platform:
          $ref: '#/components/schemas/OpenMarketPlatform'
        platformProductId:
          type: string
        status:
          $ref: '#/components/schemas/RegistrationStatus'
        categoryMapping:
          type: string
        registeredAt:
          type: string
          format: date-time

    RegistrationStatus:
      type: string
      enum: [PENDING, PROCESSING, SUCCESS, FAILED, UPDATING]

    ProductPrice:
      type: object
      properties:
        amount:
          type: number
          minimum: 0
        currency:
          type: string
          enum: [USD, CNY, KRW, EUR, JPY]
        originalAmount:
          type: number
          minimum: 0

    ProductImage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        originalUrl:
          type: string
          format: uri
        processedImages:
          type: array
          items:
            $ref: '#/components/schemas/ProcessedImageVariant'
        status:
          type: string
          enum: [PENDING, PROCESSING, PROCESSED, FAILED]

    ProcessedImageVariant:
      type: object
      properties:
        size:
          type: string
          enum: [thumbnail, medium, large, original]
        url:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
        fileSize:
          type: integer
        format:
          type: string
          enum: [webp, jpg, png]

    # 주문 스키마
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        marketOrder:
          $ref: '#/components/schemas/MarketOrderInfo'
        customer:
          $ref: '#/components/schemas/CustomerInfo'
        shipping:
          $ref: '#/components/schemas/ShippingInfo'
        payment:
          $ref: '#/components/schemas/PaymentInfo'
        status:
          $ref: '#/components/schemas/OrderStatus'
        createdAt:
          type: string
          format: date-time

    OrderStatus:
      type: string
      enum: [RECEIVED, CONFIRMED, PURCHASING, PURCHASED, SHIPPING, DELIVERED, CANCELLED, REFUNDED]

    MarketOrderInfo:
      type: object
      properties:
        platform:
          $ref: '#/components/schemas/OpenMarketPlatform'
        orderId:
          type: string
        orderDate:
          type: string
          format: date-time
        quantity:
          type: integer
          minimum: 1
        unitPrice:
          type: number
          minimum: 0
        totalPrice:
          type: number
          minimum: 0

    CustomerInfo:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        address:
          $ref: '#/components/schemas/Address'

    ShippingInfo:
      type: object
      properties:
        carrier:
          type: string
        trackingNumber:
          type: string
        shippedAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [PREPARING, SHIPPED, IN_TRANSIT, DELIVERED, FAILED]

    PaymentInfo:
      type: object
      properties:
        saleAmount:
          type: number
          minimum: 0
        costAmount:
          type: number
          minimum: 0
        shippingFee:
          type: number
          minimum: 0
        commission:
          type: number
          minimum: 0
        netProfit:
          type: number
        profitRate:
          type: number

    # 공통 스키마
    Address:
      type: object
      properties:
        zipCode:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
          default: KR

    Pagination:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        totalPages:
          type: integer
          minimum: 0

    CrawledProductData:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          $ref: '#/components/schemas/ProductPrice'
        images:
          type: array
          items:
            type: string
            format: uri
        specifications:
          type: object
        category:
          type: string

    DashboardStats:
      type: object
      properties:
        totalProducts:
          type: integer
        activeProducts:
          type: integer
        totalOrders:
          type: integer
        totalRevenue:
          type: number
        totalProfit:
          type: number
        profitRate:
          type: number
        recentOrders:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: An error occurred
        code:
          type: string
          example: ERROR_CODE
        details:
          type: object

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: 인증 실패
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: 권한 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: 내부 서버 오류
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'